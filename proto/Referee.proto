syntax = "proto3";

import "Vector2f.proto";
package roboteam_proto;

message RefereeData {

    // The UNIX timestamp when the packet was sent, in microseconds.
    // Divide by 1,000,000 to get a time_t.
    uint64 packet_timestamp = 1;
    uint32 stage_time_left = 2;
    uint32 command_counter = 3;
    uint64 command_timestamp = 4;
    Vector2f designated_position = 5;
    RefereeTeamInfo us = 6;
    RefereeTeamInfo them = 7;

    enum RefCommand {
        HALT = 0;
        STOP = 1;
        NORMAL_START = 2;
        FORCE_START = 3;
        PREPARE_KICKOFF_US = 4;
        PREPARE_KICKOFF_THEM = 5;
        PREPARE_PENALTY_US = 6;
        PREPARE_PENALTY_THEM = 7;
        DIRECT_FREE_US = 8;
        DIRECT_FREE_THEM = 9;
        INDIRECT_FREE_US=10;
        INDIRECT_FREE_THEM=11;
        TIMEOUT_US=12;
        TIMEOUT_THEM=13;
        GOAL_US=14;
        GOAL_THEM=15;
        BALL_PLACEMENT_US=16;
        BALL_PLACEMENT_THEM=17;
    }
    RefCommand command = 8;

    enum RefStage {
        NORMAL_FIRST_HALF_PRE = 0;
        NORMAL_FIRST_HALF = 1;
        NORMAL_HALF_TIME = 2;
        NORMAL_SECOND_HALF_PRE = 3;
        NORMAL_SECOND_HALF = 4;
        EXTRA_TIME_BREAK = 5;
        EXTRA_FIRST_HALF_PRE = 6;
        EXTRA_FIRST_HALF = 7;
        EXTRA_HALF_TIME = 8;
        EXTRA_SECOND_HALF_PRE = 9;
        EXTRA_SECOND_HALF = 10;
        PENALTY_SHOOTOUT_BREAK = 11;
        PENALTY_SHOOTOUT = 12;
        POST_GAME = 13;
    }
    RefStage stage = 9;
}

message RefereeTeamInfo {
    string name = 1;
    uint32 score = 2;
    uint32 red_cards = 3;
    repeated uint32 yellow_card_times = 4;
    uint32 yellow_cards = 5;
    uint32 timeouts = 6;
    uint32 timeout_time = 7;
    uint32 goalie = 8;
}
